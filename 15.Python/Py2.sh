Python自动化运维 day02
1.变量
2.数据类型概述
3.判断语句
4.while循环

基础
变量数据类型
基础语句
高级编程方式
框架/类库/模块
##############################################################################
●变量
  & 变量名约定：
     1.首字符为字母或下划线
     2.后续字符可以为数字、字母、下划线
     3.变量名区分大小写
     4.关键字不能作为变量
  & 注意事项：
    python中不能直接定义变量，需要先用等号赋值
    
●数据类型
  & 数字
    int：有符号整数
         — 十进制
         — 二进制       0b10010
         — 八进制       0o177
         — 十六进制0-F 0xFFFF         
    bool：布尔值 
         — True
         — False
    float：浮点数
        — 小数点
    complex：复数
  & 字符串
    — 用引号定义，引号之间
    — 单引与双引意义一样
    — 支持三引号，可以用来包含特殊字符;如换行“\n”
  & 列表
    — 理解成容器 可以存放任意类型的python对象
    — 使用[  ]表示列表，列表中的值用逗号分隔 
      >>> ['abdc',True,3.14,1+1j,[1,2,3]]
      ['abdc', True, 3.14, (1+1j),[1,2,3]]
    — 列表操作
        1.可以使用切片和索引操作列表
        2.支持索引赋值       
  & 元组
    — 用() 表示元组
    — 
##############################################################################
●算术运算
  + - * /  
  //         #取整
  %
  ** 
  
>>> 3//2
1
>>> 2**8
256
>>> 2.5*2   #注意，浮点数与整数运算，结果为浮点数
5.0

●字符串切片
  格式 [起始位置:结束位置]
  注意:不写":"跟结束位置，只取指定索引值的字符
  表示数据的位置从0开始
  开头结尾可以省略不写
  
>>> l="abcdefghijklmnopqrstuvwxyz"
>>> l[4]
'e'
>>> l[25]
'z'
>>> l[-1]
'z'
>>> l[2:5]
'cde'
>>> l[4:-1]
'efghijklmnopqrstuvwxy'

>>> l[:5]   #":"前不写，默认第一个字符
'abcde'
>>> l[4:]
'efghijklmnopqrstuvwxyz' #":"后不写，默认最后一个字符
>>> l[:]
'abcdefghijklmnopqrstuvwxyz'

●字符串拼接
  用数字运算符+，拼接
  >>> str0="I"
  >>> str1="Linux"
  >>> strg=str0+str+str1
  >>> strg
  'I*Linux'

●生成重复字符串
  用数字运算符*，重复生成
  >>> str="*"
  >>> str*10
  '**********'

●列表操作
& 列表切片查找
  >>> list=['you','￥15000/month',True]
  >>> list
  ['you', '￥15000/month', True]
  >>> list[2]
  True
  >>> list[0]
  'you'
  >>> list[1]
  '￥15000/month'

& 列表嵌入列表
  >>> list=['you',[1,2,3],True]
  >>> list
  ['you', [1, 2, 3], True]
  >>> list[1]
[  1, 2, 3]

& 列表索引赋值
  >>> list[2]=False
  >>> list
  ['you', [1, 2, 3], False]
  
&列表值存在判断
 使用 in 与 not in 是否在指定列表中
 

##############################################################################
数据类型
&数字
>>> 0o100
64
>>> 0x100
256
>>> 0b1111
15
& bool
>>> True
True
>>> true  
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'true' is not defined
>>> False
False

& 字符 三引号
>>> print('''
... 今天是
... python课程
... 第二天''')
今天是
python课程
第二天

>>> l='''你好，
... 在吗，
... 想打你！'''
>>> l
'你好，\n在吗，\n想打你！'






















