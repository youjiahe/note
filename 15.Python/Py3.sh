Python自动化运维 day03
1.for循环
   1.1 for循环结构
   1.2 range函数
   1.3 列表解析
2.文件对象
3.函数基础
4.模块基础

##############################################################################
●批量缩进
   选中---->TAB
   取消缩进 选中---->ctrl+TAB
●批量注释
   选中---->ctrl+/
##############################################################################
for 循环   
●语法：
for 变量列表 in 可迭代对象:
    for_suit
●可迭代对象:字符串  列表  元组   字典
●迭代/遍历：使用for循环查找可迭代对象的每一个元素
  — for循环会先从可迭代对象中取出每一个元素、依次和变量列表的变量绑定
  — for循环的次数与可迭代对象元素的个数相等
  — for变量列表需要真实存在的，尽量使用新的变量循环
  
●注意事项：
  — 如果使用for循环遍历一个空的可迭代对象，循环不会执行，对应的变量也可能不会创建
  — 数字不是可迭代对象； not iterrable ---->不可迭代
●例子 
>>> for ch in 'abcd':
...     print(ch)
... 
a
b
c
d

>>> for i in [1,2,3,4,5]:  #数字的迭代使用列表/元组
...     print(int(i))
... 
1
2
3
4
5    
>>> for i in 100:       #数字不可迭代
...     print(i)
... 
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not iterable
##############################################################################
range函数
range(start,end)和切片相同，不包含结束值
返回以和可迭代的整数序列，通常和for循环搭配使用
##############################################################################
for循环  range函数
●案例1：
   打印数字1～20
>>> for i in range(1,21):
...     print(i,end=' ')
... else:
...     print('')
... 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
>>> 
##############################################################################
for循环  方法：列表.append 
#!/usr/bin/env python3
●案例2：斐波那契数列 ----- 最后一个数总是前两个书之和
#初始化列表 fibs=[0,1]
#fibs[0,1,1]
#fibs[0,1,1,2]
#fibs[0,1,1,2,3]
#使用append方法进行添加   列表名.append(列表值)

fibs=[0,1]
for i in range(10):  #追加10个元素
    fibs.append(fibs[-2]+fibs[-1])
print(fibs)

结果：
[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

##############################################################################
for循环
●案例3： 99乘法表
&打印方法1：  print拼接
#/usr/bin/env python3
end=9
for i in range(1,end+1):
    for j in range(1,i+1):
        if i*j<10:
            print(j, '×', i, '=', i * j, sep='', end='  ')
         
        else:
            print(j,'×',i,'=',i*j,sep='',end=' ')
    print('')
    
&打印方法2：  用结构化字符串打印    '%d×%d=%d' % (j,i,i*j)
#/usr/bin/env python3
end=9
for i in range(1,end+1):
    for j in range(1,i+1):
        if i*j<10:
            print('%d×%d=%d' % (j,i,i*j),end='  ')
#            print(j, '×', i, '=', i * j, sep='', end='  ')
        else:
            print('%d×%d=%d' % (j,i,i*j),end=' ')
#            print(j,'×',i,'=',i*j,sep='',end=' ')
    print('')

1×1=1  
1×2=2  2×2=4  
1×3=3  2×3=6  3×3=9  
1×4=4  2×4=8  3×4=12 4×4=16 
1×5=5  2×5=10 3×5=15 4×5=20 5×5=25 
1×6=6  2×6=12 3×6=18 4×6=24 5×6=30 6×6=36 
1×7=7  2×7=14 3×7=21 4×7=28 5×7=35 6×7=42 7×7=49 
1×8=8  2×8=16 3×8=24 4×8=32 5×8=40 6×8=48 7×8=56 8×8=64 
1×9=9  2×9=18 3×9=27 4×9=36 5×9=45 6×9=54 7×9=63 8×9=72 9×9=81
##############################################################################
for循环
●列表解析
 & 结构
  [ 表达式  for 变量列表 in 可迭代对象 if 条件表达式 ]


●案例4：把1～20放到列表里面
& 方法一:
>>> for i in range(1,21):
...     alist.append(i)
... 
>>> alist
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

& 方法二：
>>> [i for i in range(1,21)]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

& 打印偶数：
>>> [ i for i in range(1,21) if i%2==0]
[2, 4, 6, 8, 10, 12, 14, 16, 18, 20]






















