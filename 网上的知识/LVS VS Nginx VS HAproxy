LVS：
1、工作在网络4层，仅作分发之用，具体的流量由linux内核处理，因此没有流量的产生。
2、抗负载能力强。抗负载能力强；
3、稳定性、可靠性好，自身有完美的热备方案；（如：LVS+Keepalived）
4、性能高，能达到F5硬件的60%；对内存和cpu资源消耗比较低
5、自身没有健康性检查
6、支持负载均衡算法：rr（轮循）、wrr（带权轮循）、lc（最小连接）、wlc（权重最小连接）
7、应用范围比较广，可以对所有应用做负载均衡；
8、配置 复杂，对网络依赖比较大，稳定性很高。
9、不支持正则处理，不能做动静分离。
Ngnix：
1、工作在网络的7层之上，可以针对http应用做一些分流的策略，比如针对域名、目录结构；2
2、也可以承担高的负载压力且稳定，一般能支撑超过1万次的并发；
3、性能也较高、对内存和CPU资源消耗比较低
4、对后端服务器的健康检查，只支持通过端口来检测，不支持通过url来检测。
5、支持负载均衡算法：Round-robin（轮循）、Weight-round-robin（加权权轮循）、Ip-hash（Ip哈希）
6、Nginx对请求的异步处理可以帮助节点服务器减轻负载；
7、Nginx仅能支持http、https和Email协议，这样就在适用范围较小。
8、不支持Session的直接保持；
9、Nginx还能做Web服务器

HAProxy的特点是：
1、工作在TCP（四层）和HTTP（七层），支持虚拟主机；、
2、抗负载能力比LVS弱，比Nginx强；
3、性能较高，单纯从效率上来讲HAProxy更会比Nginx有更出色的负载均衡速度。
4、支持url检测后端的服务器出问题的检测会有很好的帮助。
5、更多的负载均衡策略比如：动态加权轮循(Dynamic Round Robin)，
   加权源地址哈希(Weighted Source Hash)，
   加权URL哈希和加权参数哈希(Weighted Parameter Hash)已经实现
6、能够补充Nginx的一些缺点比如Session的保持，Cookie的引导等工作
7、HAProxy可以对Mysql进行负载均衡，对后端的DB节点进行检测和负载均衡。

三大主流软件负载均衡器适用业务场景：
1、网站建设初期，可以选用Nigix/HAproxy作为反向代理负载均衡（或者流量不大都可以不选用负载均衡），
   因为其配置简单，性能也能满足一般的业务场景。如果考虑到负载均衡器是有单点问题，
   可以采用Nginx+Keepalived/HAproxy+Keepalived避免负载均衡器自身的单点问题。
2、网站并发达到一定程度之后，为了提高稳定性和转发效率，可以使用LVS、
   毕竟LVS比Nginx/HAproxy要更稳定，转发效率也更高。不过维护LVS对维护人员的要求也会更高，投入成本也更大。

注：Niginx与Haproxy比较：Niginx支持七层、用户量最大，稳定性比较可靠。
Haproxy支持四层和七层，支持更多的负载均衡算法，支持session保存等。
具体选型看使用场景，目前来说Haproxy由于弥补了一些Niginx的缺点用户量也不断在提升。


衡量负载均衡器好坏的几个重要因素： 
1、会话率 ：单位时间内的处理的请求数 
2、会话并发能力：并发处理能力 
3、数据率：处理数据能力 
经过官方测试统计，haproxy 单位时间处理的最大请求数为20000个，
可以同时维护40000-50000个并发连接，最大数据处理能力为10Gbps。

综合上述，haproxy是性能优越的负载均衡、反向代理服务器。
