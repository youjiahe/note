##############################################
^            #开头
$            #结尾
[]            #集合  
[^]          #集合取反 
.             #匹配任意一个字符
*             #匹配前一个字符出现人任意次
\{n,m\}      #匹配前一个字符出现n-m次
\{n,\}        #
\{n\}
\(\)              #保留(复制)

grep “\.$”  1.txt   #过滤以点结尾的行，“\”可以屏蔽后一个字符的特殊符号

##############################################
扩展正则：（简化基本正则)
5个
{n,m}  #去掉\号，直接指定前一个字符出现 n-m次
？      #0或1次
+      #1次或者以上
()       #分组引用整体，保留（复制）   与\(\)一样的含义
|        #或者
\b       #单词边界
\n       #按顺序把（）内容复制到相应位置    \1 \2 \3

##############################################
PS:下面看下正则表达式 \w \s \d \b
. 匹配除换行符以外的任意字符
\w 匹配字母或数字或下划线或汉字 等价于 '[^A-Za-z0-9_]'。
\s 匹配任意的空白符
\d 匹配数字
\b 匹配单词的开始或结束
\w能不能匹配汉字要视你的操作系统和你的应用环境而定

\D  \S \W 都是以上意义的取反
